<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秀秀的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-15T06:48:05.205Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>xiuxiu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>百度地图API使用</title>
    <link href="http://yoursite.com/2018/06/15/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEAPI%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/06/15/百度地图API使用/</id>
    <published>2018-06-15T02:19:56.000Z</published>
    <updated>2018-06-15T06:48:05.205Z</updated>
    
    <content type="html"><![CDATA[<h3 id="百度地图开发者教程"><a href="#百度地图开发者教程" class="headerlink" title="百度地图开发者教程"></a>百度地图开发者教程</h3><p><a href="http://lbsyun.baidu.com/" target="_blank" rel="noopener">百度地图开发者教程</a></p><h3 id="百度地图API密匙申请方法"><a href="#百度地图API密匙申请方法" class="headerlink" title="百度地图API密匙申请方法"></a>百度地图API密匙申请方法</h3><p>1.首先打开网址注册一个账号。填好信息好提交。<br>  申请地址<a href="http://lbsyun.baidu.com/apiconsole/key" target="_blank" rel="noopener">http://lbsyun.baidu.com/apiconsole/key</a><br>  <img src="/images/baidu/3.png" alt="Alt text"><br>2.点击创建应用弹出如下窗口。<br><img src="/images/baidu/3.png" alt="Alt text"><br>3.按图所示填写自己所需要的菜单功能。<br><img src="/images/baidu/2.png" alt="Alt text"><br>4.提交后，会出现以下图示一连数字那就是地图的API。<br><img src="/images/baidu/1.png" alt="Alt text"></p><h3 id="地图API示例"><a href="#地图API示例" class="headerlink" title="地图API示例"></a>地图API示例</h3><p>1.设置覆盖物<br><img src="/images/baidu/map_2.png" alt="Alt text"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">var map = new BMap.Map(&quot;allmap&quot;,&#123;minZoom:3,maxZoom:5&#125;);</span><br><span class="line">// 创建Map实例,minZoom：设置地图允许的最小级别，maxZoom：设置地图允许的最大级别</span><br><span class="line">var point = new BMap.Point(116.473008,39.916605);</span><br><span class="line">// 设置地理坐标点</span><br><span class="line">map.centerAndZoom(point, 4);</span><br><span class="line">// 初始化地图,即可设置中心点和地图缩放级别</span><br><span class="line">map.enableScrollWheelZoom(true);</span><br><span class="line">//启用滚轮放大缩小</span><br><span class="line"></span><br><span class="line">//设置marker图标为飞机</span><br><span class="line">var vectorPlane = new BMap.Marker(new BMap.Point(point.lng+0.04,point.lat-0.03), &#123;</span><br><span class="line">  // 初始化小飞机Symbol</span><br><span class="line">  icon: new BMap.Symbol(BMap_Symbol_SHAPE_PLANE, &#123;</span><br><span class="line">    scale: 2,</span><br><span class="line">    // 矢量图标大小</span><br><span class="line">    strokeColor:&quot;#F6C081&quot;,</span><br><span class="line">    rotation: 50,</span><br><span class="line">    // 方向</span><br><span class="line">    fillColor:&quot;#F6C081&quot;,</span><br><span class="line">    // 填充色</span><br><span class="line">    fillOpacity: 1</span><br><span class="line">    // 透明度</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">map.addOverlay(vectorPlane);</span><br><span class="line">// 向地图中添加单个覆盖物</span><br></pre></td></tr></table></figure></p><p>2.设置覆盖物的文字标签<br><img src="/images/baidu/map_1.png" alt="Alt text"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var point = new BMap.Point(point.lng, point.lat);</span><br><span class="line">// 设置坐标点</span><br><span class="line">var label = new BMap.Label(&quot;我是文字标注哦&quot;,&#123;offset:new BMap.Size(20,-10)&#125;);</span><br><span class="line">// 创建一个文本标注实例,offset:文本标注的位置偏移值</span><br><span class="line">label.setStyle(&#123;</span><br><span class="line">width: &quot;20px&quot;,</span><br><span class="line">height: &quot;20px&quot;,</span><br><span class="line">lineHeight: &quot;15px&quot;,</span><br><span class="line">textAlign: &quot;center&quot;,</span><br><span class="line">border: &apos;1px solid #000000&apos;,</span><br><span class="line">borderRadius: &quot;10px&quot;,</span><br><span class="line">&#125;);</span><br><span class="line">// 文字标签的样式设置</span><br><span class="line">marker.setLabel(label);</span><br><span class="line">// 为标注添加文本标注</span><br></pre></td></tr></table></figure></p><p>3.信息窗口示例<br><img src="/images/baidu/map_3.png" alt="Alt text"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// 百度地图API功能</span><br><span class="line">var map = new BMap.Map(&quot;allmap&quot;);</span><br><span class="line">var point = new BMap.Point(116.417854,39.921988);</span><br><span class="line">var marker = new BMap.Marker(point);</span><br><span class="line"> // 创建标注</span><br><span class="line">map.addOverlay(marker);</span><br><span class="line">// 将标注添加到地图中</span><br><span class="line">map.centerAndZoom(point, 15);</span><br><span class="line">var opts = &#123;</span><br><span class="line">  width : 200,     // 信息窗口宽度</span><br><span class="line">  height: 100,     // 信息窗口高度</span><br><span class="line">  title : &quot;海底捞王府井店&quot; , // 信息窗口标题</span><br><span class="line">  enableMessage:true,//设置允许信息窗发送短息</span><br><span class="line">  message:&quot;亲耐滴，晚上一起吃个饭吧？戳下面的链接看下地址喔~&quot;</span><br><span class="line">&#125;</span><br><span class="line">var infoWindow = new BMap.InfoWindow(&quot;地址：北京市东城区王府井大街88号乐天银泰百货八层&quot;, opts);</span><br><span class="line">// 创建一个信息窗实例，其中content支持HTML内容</span><br><span class="line">marker.addEventListener(&quot;mouseover&quot;, function()&#123;</span><br><span class="line">  map.openInfoWindow(infoWindow,point);</span><br><span class="line">  //开启信息窗口</span><br><span class="line">&#125;);</span><br><span class="line">marker.addEventListener(&quot;mouseout&quot;, function()&#123;</span><br><span class="line">  map.closeInfoWindow(infoWindow,point);</span><br><span class="line">  //关闭信息窗口</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>4.绘制折线<br><img src="/images/baidu/map_4.png" alt="Alt text"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">var map = new BMap.Map(&quot;allmap&quot;);</span><br><span class="line">map.centerAndZoom(new BMap.Point(116.404, 39.915), 15);</span><br><span class="line">map.enableScrollWheelZoom();</span><br><span class="line"></span><br><span class="line">var Symbol = new BMap.Symbol(BMap_Symbol_SHAPE_PLANE, &#123;</span><br><span class="line">scale: 2,</span><br><span class="line">strokeColor:&quot;#24B76E&quot;,</span><br><span class="line">rotation: 270,</span><br><span class="line">fillColor: &quot;#24B76E&quot;,</span><br><span class="line">fillOpacity: 1</span><br><span class="line">&#125;)</span><br><span class="line">//设置飞机矢量图</span><br><span class="line"> var iconSequence = new BMap.IconSequence(Symbol, &apos;10%&apos;, &apos;100%&apos;, false);</span><br><span class="line">//创建线上的符号类。 fixedRotation 图标的旋转角度是否与线走向一致</span><br><span class="line">var polyline = new BMap.Polyline([</span><br><span class="line">new BMap.Point(116.399, 39.910),</span><br><span class="line">new BMap.Point(116.405, 39.920),</span><br><span class="line">new BMap.Point(116.423493, 39.907445)</span><br><span class="line">// 点的集合</span><br><span class="line">], &#123;strokeColor:&quot;blue&quot;,</span><br><span class="line"> strokeWeight:2,</span><br><span class="line"> // 折线样式设置</span><br><span class="line"> strokeOpacity:0.5,</span><br><span class="line"> icons:[iconSequence]</span><br><span class="line"> // 配置贴合折线的图标</span><br><span class="line"> &#125;);</span><br><span class="line">map.addOverlay(polyline);   //增加折线</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;百度地图开发者教程&quot;&gt;&lt;a href=&quot;#百度地图开发者教程&quot; class=&quot;headerlink&quot; title=&quot;百度地图开发者教程&quot;&gt;&lt;/a&gt;百度地图开发者教程&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://lbsyun.baidu.com/&quot; target=
      
    
    </summary>
    
      <category term="百度地图API" scheme="http://yoursite.com/categories/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEAPI/"/>
    
    
      <category term="百度地图API" scheme="http://yoursite.com/tags/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEAPI/"/>
    
  </entry>
  
  <entry>
    <title>css3.0总结</title>
    <link href="http://yoursite.com/2018/06/07/css3-0%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/06/07/css3-0总结/</id>
    <published>2018-06-07T06:11:53.000Z</published>
    <updated>2018-06-15T07:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="css3-0"><a href="#css3-0" class="headerlink" title="css3.0"></a>css3.0</h3><p>css3.0 在css的基础上新增加了一些属性以及用法</p><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><p>E[attr] 只使用属性名，但没有确定任何属性值<br>E[attr=”value”]指定属性名,并指定该属性的属性值<br>E[attr~=”value”]指定属性名，并且具有属性值，此属性值是一个词列表，并且以空格隔开，其中词列表中包含了一个value词，而且等号前面的~不能不写<br>E[attr^=”value”]指定属性名，并且具有属性值，属性值以value开头<br>E[attr$=”value”]指定属性名，并且具有属性值，而且属性值是以value结束的<br>E[attr*=”value”]指令了属性名,并且有属性值，而且属性值中包含了value值<br>E[attr|=”value”]指定了属性名，并且有属性值是value或者是以‘vaule-’开头的值(zh-cn)<br>E:nth-child(n) 表示E父元素中的第n个子节点<br>p:nth-child(odd){background:red} // 匹配奇数行<br>p:nth-child(even){background:red} // 匹配偶数行<br>p:nth-child(2n){background:red}<br>E:nth-last-child(n) 表示E父元素中的第n个字节点，从后向前计算<br>E:nth-of-type(n) 表示E父元素中的第那个字节点，且类型为E<br>E:nth-last-of-type(n) 表示E父元素中的第那个字节点，且类型为E，从后向前计算<br>E:empty表示E元素中没有子节点，注意子节点包含文本节点<br>E:first-child 表示E元素中的第一个子节点<br>E:last-child 表示E元素中最后一个子节点<br>E:first-of-type 表示E元素中的第一个子节点且节点类型是E<br>E:last-of-type 表示E元素中的最后一个子节点且节点类型为E<br>E:only-child 表示E元素中只有一个子节点，注意：子节点不包含文本节点<br>E:only-of-type 表示E的父元素中只有一个子节点，且这个唯一的子节点类型必须为E，注意：子节点不包含文本节点<br>E:target 表示当前的url片段的元素类型，这个元素必须是E<br>E:disabled 表示不可点击的表单控件<br>E:enabled 表示可点击的表单控件<br>E:checked 表示已选中的checkbox或radio<br>E:first-line 表示E元素中的第一行<br>E:first-letter 表示E元素中的第一个字符<br>E::selection 表示E元素在用户选中文字时<br>E::before 生成内容在E元素前<br>E::after 生成内容在E元素后<br>E:not(s)表示E元素不被匹配<br>E~F表示E元素毗邻的F元素<br>content 属性</p><h3 id="弹性盒模型"><a href="#弹性盒模型" class="headerlink" title="弹性盒模型"></a>弹性盒模型</h3><p>任何一个容器都可以指定为Flex布局。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>行内元素也可以使用Flex布局。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  display: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>同时需要注意，在不用的浏览器中，我们还需要在前面加上对应的浏览器前缀。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  display: -webkit-flex; /* Safari */</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><h3 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h3><h3 id="背景和边框"><a href="#背景和边框" class="headerlink" title="背景和边框"></a>背景和边框</h3><h3 id="文字特效"><a href="#文字特效" class="headerlink" title="文字特效"></a>文字特效</h3><p>text-shadow: h-shadow v-shadow blur color;<br>h-shadow：水平阴影的位置。允许负值<br>v-shadow：垂直阴影的位置。允许负值<br>blur：模糊的距离<br>color：阴影的颜色</p><p>box-shadow: h-shadow v-shadow blur spread color inset;<br>h-shadow：水平阴影的位置。允许负值<br>v-shadow：垂直阴影的位置。允许负值。<br>blur：可选。模糊距离。<br>spread：可选。阴影的尺寸。<br>color：可选。阴影的颜色<br>inset：可选。将外部阴影 (outset) 改为内部阴影。<br>box-shadow还支持多阴影，例 如：box-shadow: inset 0 0 1px #fff, inset 4px 4px 20px  rgba(255,255,255,0.33), inset -2px -2px 10px rgba(255,255,255,0.25);所表示的 含义是，无偏移1像素模糊白色阴影重叠于左上角4像素偏移20像素模糊透明度0.33的白色内阴影再重叠于右下角偏移2像素，模糊10像素，透明度 0.25的白色内阴影。<br>text-overflow:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">div.test</span><br><span class="line">&#123;</span><br><span class="line">white-space:nowrap;</span><br><span class="line">width:12em;</span><br><span class="line">overflow:hidden;</span><br><span class="line">color:red;</span><br><span class="line">border:1px solid #000000;</span><br><span class="line">text-overflow:ellipsis;</span><br><span class="line">// text-overflow:clip;</span><br><span class="line">// text-overflow:&apos;--&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2D-3D-转换"><a href="#2D-3D-转换" class="headerlink" title="2D/3D 转换"></a>2D/3D 转换</h3><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><h3 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h3><h3 id="用户界面"><a href="#用户界面" class="headerlink" title="用户界面"></a>用户界面</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;css3-0&quot;&gt;&lt;a href=&quot;#css3-0&quot; class=&quot;headerlink&quot; title=&quot;css3.0&quot;&gt;&lt;/a&gt;css3.0&lt;/h3&gt;&lt;p&gt;css3.0 在css的基础上新增加了一些属性以及用法&lt;/p&gt;
&lt;h3 id=&quot;属性选择器&quot;&gt;&lt;a href
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>移动端学习</title>
    <link href="http://yoursite.com/2018/06/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/06/04/移动端学习/</id>
    <published>2018-06-04T03:05:11.000Z</published>
    <updated>2018-06-15T07:00:13.284Z</updated>
    
    <content type="html"><![CDATA[<h3 id="真机测试"><a href="#真机测试" class="headerlink" title="真机测试"></a>真机测试</h3><p>安装XAMPP<br>视口设置<br>viewport 视口（可视区窗口）<br>默认不设置viewport一般可视区宽度在移动端是980<br>width 可视区的宽度（number|| device-width）</p><p><meta name="viewport" content="width=device-width"><br>user-scalable是否允许用户缩放（yes|| no）<br>ios10无效处理（放在事件中进行）</p><p><meta name="viewport" content="width=device-width，user-scalable=no,initial-scale=.5,minimum-scale=.5,maximum-scale=.5"><br>initial-scale 初始缩放比例<br>minimun-scale 最小缩放比例<br>maximun-scale 最大缩放比例<br>像素比：window.devicePixelRatio（只能获取进行设置没有意义）<br>//像素比把一个像素放大至N个像素进行显示(手机的分辨率高，但是大小比较小)设计图至少750</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;真机测试&quot;&gt;&lt;a href=&quot;#真机测试&quot; class=&quot;headerlink&quot; title=&quot;真机测试&quot;&gt;&lt;/a&gt;真机测试&lt;/h3&gt;&lt;p&gt;安装XAMPP&lt;br&gt;视口设置&lt;br&gt;viewport 视口（可视区窗口）&lt;br&gt;默认不设置viewport一般可视区宽度在
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BlueLake博客主题的详细配置</title>
    <link href="http://yoursite.com/2018/05/08/BlueLake%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/05/08/BlueLake博客主题的详细配置/</id>
    <published>2018-05-08T08:21:50.000Z</published>
    <updated>2018-05-08T09:05:38.242Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a><a href="#开始之前" title="开始之前"></a>开始之前</h3><p><a href="https://github.com/chaooo/hexo-theme-BlueLake" target="_blank" rel="noopener">BlueLake主题</a>写了有一段时间了，经常会有朋友发消息给我问一些配置的问题，这篇博文主要也是为了解决这些问题。主题以简洁轻量自居(实则简陋)，去掉了Jquery和Fancybox,用原生JS实现站内搜索功能和回到顶部效果。这个主题只是一个小小的雏形，期待您来帮助它成长。</p><p>在阅读本文之前，假定您已经成功安装了<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>，并使用 Hexo 提供的命令创建了一个静态博客。Hexo是一个快速、简洁且高效的博客框架。Hexo基于Node.js ，使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><blockquote><p>需要特别注意的是Hexo有两个<code>_config.yml</code>配置文件，一份位于站点根目录下，主要包含 Hexo 站点本身的配置，下文中会称为<strong><code>根_config.yml</code></strong>；另一份位于主题目录下（themes/主题名/_config.yml），这份配置由主题作者提供，主要用于配置主题相关的选项,下文中会称为<strong><code>主题_config.yml</code></strong>。</p></blockquote><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a><a href="#1-安装" title="1. 安装"></a>1. 安装</h3><p>您可以直接到<a href="https://github.com/chaooo/hexo-theme-BlueLake" target="_blank" rel="noopener">BlueLake发布页</a>下载，然后解压拷贝到<code>themes</code>目录下，修改配置即可。<br>不过我还是推荐使用<code>GIT</code>来checkout代码，之后也可以通过<code>git pull</code>来快速更新。</p><h4 id="1-1-安装主题"><a href="#1-1-安装主题" class="headerlink" title="1.1 安装主题"></a><a href="#1-1-安装主题" title="1.1 安装主题"></a>1.1 安装主题</h4><p>在根目录下打开终端窗口：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> <a href="https://github.com/chaooo/hexo-theme-BlueLake.git" target="_blank" rel="noopener">https://github.com/chaooo/hexo-theme-BlueLake.git</a> themes/BlueLake</div></pre></td></tr></tbody></table></figure><h4 id="1-2-安装主题渲染器"><a href="#1-2-安装主题渲染器" class="headerlink" title="1.2 安装主题渲染器"></a><a href="#1-2-安装主题渲染器" title="1.2 安装主题渲染器"></a>1.2 安装主题渲染器</h4><p>BlueLake是基于<code>jade</code>和<code>stylus</code>写的，所以需要安装<code>hexo-renderer-jade</code>和<code>hexo-renderer-stylus</code>来渲染。</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install <a href="mailto:hexo-renderer-jade@0.3.0" target="_blank" rel="noopener">hexo-renderer-jade@0.3.0</a> –save</div><div class="line">$ npm install hexo-renderer-stylus –save</div></pre></td></tr></tbody></table></figure><h4 id="1-3-启用主题"><a href="#1-3-启用主题" class="headerlink" title="1.3 启用主题"></a><a href="#1-3-启用主题" title="1.3 启用主题"></a>1.3 启用主题</h4><p>打开<code>根_config.yml</code>配置文件，找到theme字段，将其值改为<code>BlueLake</code>(先确认主题文件夹名称是否为BlueLake)。</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">theme:</span> BlueLake</div></pre></td></tr></tbody></table></figure><h4 id="1-4-验证"><a href="#1-4-验证" class="headerlink" title="1.4 验证"></a><a href="#1-4-验证" title="1.4 验证"></a>1.4 验证</h4><p>首先启动 Hexo 本地站点，并开启调试模式：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s –debug</div></pre></td></tr></tbody></table></figure><p>在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：<code>INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code><br>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p><h4 id="1-5-更新主题"><a href="#1-5-更新主题" class="headerlink" title="1.5 更新主题"></a><a href="#1-5-更新主题" title="1.5 更新主题"></a>1.5 更新主题</h4><p>今后若主题添加了新功能正是您需要的，您可以直接<code>git pull</code>来更新主题。</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> themes/BlueLake</div><div class="line">git pull</div></pre></td></tr></tbody></table></figure><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a><a href="#2-配置" title="2. 配置"></a>2. 配置</h3><h4 id="2-1-配置网站头部显示文字"><a href="#2-1-配置网站头部显示文字" class="headerlink" title="2.1 配置网站头部显示文字"></a><a href="#2-1-配置网站头部显示文字" title="2.1 配置网站头部显示文字"></a>2.1 配置网站头部显示文字</h4><p>打开<code>根_config.yml</code>，找到：</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">title:</span> </div><div class="line"><span class="attr">subtitle:</span> </div><div class="line"><span class="attr">description:</span> </div><div class="line"><span class="attr">author:</span></div></pre></td></tr></tbody></table></figure><p><code>title</code>和<code>subtitle</code>分别是网站主标题和副标题，会显示在网站头部；<code>description</code>在网站界面不会显示，内容会加入网站源码的<code>meta</code>标签中，主要用于SEO；<code>author</code>就填写网站所有者的名字，会在网站底部的<code>Copyright</code>处有所显示。</p><h4 id="2-2-设置语言"><a href="#2-2-设置语言" class="headerlink" title="2.2 设置语言"></a><a href="#2-2-设置语言" title="2.2 设置语言"></a>2.2 设置语言</h4><p>该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在<code>根_config.yml</code>配置如下：</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">language:</span> zh-CN</div></pre></td></tr></tbody></table></figure><h4 id="2-3-设置菜单"><a href="#2-3-设置菜单" class="headerlink" title="2.3 设置菜单"></a><a href="#2-3-设置菜单" title="2.3 设置菜单"></a>2.3 设置菜单</h4><p>打开<code>主题_config.yml</code>，找到：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  - page:</span> home</div><div class="line"><span class="attr">    directory:</span> .</div><div class="line"><span class="attr">    icon:</span> fa-home</div><div class="line"><span class="attr">  - page:</span> archive</div><div class="line"><span class="attr">    directory:</span> archives/</div><div class="line"><span class="attr">    icon:</span> fa-archive</div><div class="line">  <span class="comment"># - page: about</span></div><div class="line">  <span class="comment">#   directory: about/</span></div><div class="line">  <span class="comment">#   icon: fa-user</span></div><div class="line"><span class="attr">  - page:</span> rss</div><div class="line"><span class="attr">    directory:</span> atom.xml</div><div class="line"><span class="attr">    icon:</span> fa-rss</div></pre></td></tr></tbody></table></figure><p>主题默认是展示四个菜单，即<code>主页home</code>，<code>归档archive</code>，<code>关于about</code>，<code>订阅RSS</code>；about需要手动添加，RSS需要安装插件，若您并不需要，可以直接注释掉。<br>每个页面底部的<code>footer</code>中<code>联系博主</code>的三个图标分别是<code>邮箱</code>，<code>微博主页链接地址</code>，<code>GitHUb个人页链接地址</code>，直接使用<code>主题_config.yml</code>中<code>about页面</code>的配置，若不需要about页面，只需要如下配置就好：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># About page </span></div><div class="line"><span class="attr">about:</span></div><div class="line"><span class="attr">  email:</span> <span class="comment">## 个人邮箱 </span></div><div class="line"><span class="attr">  weibo_url:</span> <span class="comment">## 微博主页链接地址</span></div><div class="line"><span class="attr">  github_url:</span> <span class="comment">## github主页链接地址</span></div></pre></td></tr></tbody></table></figure><h5 id="2-3-1-添加about页"><a href="#2-3-1-添加about页" class="headerlink" title="2.3.1 添加about页"></a><a href="#2-3-1-添加about页" title="2.3.1 添加about页"></a>2.3.1 添加about页</h5><p>此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page <span class="string">‘about’</span></div></pre></td></tr></tbody></table></figure><p>打开<code>主题_config.yml</code>，补全关于我页面的详细信息：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># About page </span></div><div class="line"><span class="attr">about:</span></div><div class="line"><span class="attr">  photo_url:</span> <span class="comment">## 头像的链接地址</span></div><div class="line"><span class="attr">  email:</span> <span class="comment">## 个人邮箱 </span></div><div class="line"><span class="attr">  weibo_url:</span> <span class="comment">## 微博主页链接地址</span></div><div class="line"><span class="attr">  weibo_name:</span> <span class="comment">## 微博用户名 </span></div><div class="line"><span class="attr">  github_url:</span> <span class="comment">## github主页链接地址</span></div><div class="line"><span class="attr">  github_name:</span> <span class="comment">## github用户名</span></div></pre></td></tr></tbody></table></figure><p>当然您也可以自定义重新布局about页面，只需要修改<code>layout/page.jade</code>模板就好。</p><h5 id="2-3-2-安装-RSS-订阅-和-sitemap-网站地图-插件"><a href="#2-3-2-安装-RSS-订阅-和-sitemap-网站地图-插件" class="headerlink" title="2.3.2 安装 RSS(订阅) 和 sitemap(网站地图) 插件"></a><a href="#2-3-2-安装-RSS-订阅-和-sitemap-网站地图-插件" title="2.3.2 安装 RSS(订阅) 和 sitemap(网站地图) 插件"></a>2.3.2 安装 RSS(订阅) 和 sitemap(网站地图) 插件</h5><p>在根目录下打开命令行窗口：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-feed –save</div><div class="line">$ npm install hexo-generator-sitemap –save</div><div class="line">$ npm install hexo-generator-baidu-sitemap –save</div></pre></td></tr></tbody></table></figure><p>添加<code>主题_config.yml</code>配置：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Plugins:</span></div><div class="line">  hexo-generator-feed</div><div class="line">  hexo-generator-sitemap</div><div class="line">  hexo-generator-baidu-sitemap</div><div class="line"></div><div class="line"><span class="attr">feed:</span></div><div class="line"><span class="attr">  type:</span> atom</div><div class="line"><span class="attr">  path:</span> atom.xml</div><div class="line"><span class="attr">  limit:</span> <span class="number">20</span></div><div class="line"></div><div class="line"><span class="attr">sitemap:</span></div><div class="line"><span class="attr">  path:</span> sitemap.xml</div><div class="line"><span class="attr">baidusitemap:</span></div><div class="line"><span class="attr">  path:</span> baidusitemap.xml</div></pre></td></tr></tbody></table></figure><h4 id="2-4-添加本地搜索"><a href="#2-4-添加本地搜索" class="headerlink" title="2.4 添加本地搜索"></a><a href="#2-4-添加本地搜索" title="2.4 添加本地搜索"></a>2.4 添加本地搜索</h4><p>默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件<a href="https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-json-content</a>来创建JSON数据文件：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install <a href="mailto:hexo-generator-json-content@2.2.0" target="_blank" rel="noopener">hexo-generator-json-content@2.2.0</a> –save</div></pre></td></tr></tbody></table></figure><p>然后在<code>根_config.yml</code>添加配置：</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="attr">jsonContent:</span></div><div class="line"><span class="attr">  meta:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  pages:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  posts:</span></div><div class="line"><span class="attr">    title:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    date:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    path:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    raw:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    content:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    slug:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    updated:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    comments:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    link:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    permalink:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    excerpt:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    categories:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    tags:</span> <span class="literal">true</span></div></pre></td></tr></tbody></table></figure><p>最后在<code>主题_config.yml</code>添加配置：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">local_search:</span> <span class="literal">true</span></div></pre></td></tr></tbody></table></figure><h4 id="2-5-修改站点图标"><a href="#2-5-修改站点图标" class="headerlink" title="2.5 修改站点图标"></a><a href="#2-5-修改站点图标" title="2.5 修改站点图标"></a>2.5 修改站点图标</h4><p>站点图标存放在主题的<code>Source</code>目录下，已经默认为您准备了两张图片。您也可以自己设计站点LOGO。<br>您需要准备一张ico格式并命名为<strong> favicon.ico </strong>，请将其放入hexo目录的<code>source</code>文件夹，建议大小：32px X 32px。<br>您需要为苹果设备添加网站徽标，请命名为<strong> apple-touch-icon.png </strong>的图像放入hexo目录的“source”文件夹中，建议大小为：114px X 114px。<br>(有很多网站都可以在线生成ico格式的图片。)</p><h4 id="2-6-添加站点关键字"><a href="#2-6-添加站点关键字" class="headerlink" title="2.6 添加站点关键字"></a><a href="#2-6-添加站点关键字" title="2.6 添加站点关键字"></a>2.6 添加站点关键字</h4><p>请在hexo目录的<code>根_config.yml</code>中添加keywords字段，如：</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">title:</span> Hexo</div><div class="line"><span class="attr">subtitle:</span> 副标题</div><div class="line"><span class="attr">description:</span> 网站简要描述,如：Charles·Zheng<span class="string">‘s blog.</span></div><div class="line">keywords: 网站关键字, key, key1, key2, key3</div><div class="line">author: Charles</div><div class="line">language: zh-CN</div></pre></td></tr></tbody></table></figure><h4 id="2-7-其他配置"><a href="#2-7-其他配置" class="headerlink" title="2.7 其他配置"></a><a href="#2-7-其他配置" title="2.7 其他配置"></a>2.7 其他配置</h4><p><code>主题_config.yml</code>的其他配置</p><ol><li><code>show_category_count</code>——是否显示分类下的文章数。</li><li><code>widgets_on_small_screens</code>——是否在小屏显示侧边栏，若<code>true</code>,则侧边栏挂件将显示在底部。<figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml </a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">show_category_count:</span> <span class="literal">true</span> </div><div class="line"><span class="attr">widgets_on_small_screens:</span> <span class="literal">true</span></div></pre></td></tr></tbody></table></figure></li></ol><h3 id="3-集成第三方服务"><a href="#3-集成第三方服务" class="headerlink" title="3.集成第三方服务"></a><a href="#3-集成第三方服务" title="3.集成第三方服务"></a>3.集成第三方服务</h3><h4 id="3-1-添加评论"><a href="#3-1-添加评论" class="headerlink" title="3.1 添加评论"></a><a href="#3-1-添加评论" title="3.1 添加评论"></a>3.1 添加评论</h4><p>目前主题集成六种第三方评论，分别是<a href="http://duoshuo.com" target="_blank" rel="noopener">多说评论</a>、<a href="https://disqus.com" target="_blank" rel="noopener">Disqus评论</a>、<a href="https://livere.com" target="_blank" rel="noopener">来必力评论</a>、<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言评论</a>、<a href="https://gentie.163.com/info.html" target="_blank" rel="noopener">网易云跟帖评论</a>、<a href="http://changyan.kuaizhan.com" target="_blank" rel="noopener">畅言评论</a>，多说马上就要停止服务了，友言好像也没怎么维护,目前我已把自己的博客评论从多说转移到畅言了，在国内目前<code>网易云跟帖</code>和<code>畅言</code>还不错。</p><ol><li><p>注册并获得代码。</p><pre><code>*   若使用[多说评论](http://duoshuo.com)，注册多说后获得short_name。</code></pre><ul><li>若使用<a href="https://disqus.com" target="_blank" rel="noopener">Disqus评论</a>，注册Disqus后获得short_name。</li><li>若使用<a href="https://livere.com" target="_blank" rel="noopener">来必力评论</a>，注册来必力,获得data-uid。</li><li>若使用<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言评论</a>，注册友言,获得uid。</li><li>若使用<a href="https://gentie.163.com/info.html" target="_blank" rel="noopener">网易云跟帖评论</a>，注册网易云跟帖,获得productKey。</li><li>若使用<a href="http://changyan.kuaizhan.com" target="_blank" rel="noopener">畅言评论</a>，注册畅言，获得appid，appkey。</li></ul></li><li><p>配置<code>主题_config.yml</code>：<figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Cmments</span></div><div class="line"><span class="attr">comment:</span></div><div class="line"><span class="attr">  duoshuo:</span> <span class="comment">## duoshuo_shortname</span></div><div class="line"><span class="attr">  disqus:</span> <span class="comment">## disqus_shortname</span></div><div class="line"><span class="attr">  livere:</span> <span class="comment">## 来必力(data-uid)</span></div><div class="line"><span class="attr">  uyan:</span> <span class="comment">## 友言(uid)</span></div><div class="line"><span class="attr">  cloudTie:</span> <span class="comment">## 网易云跟帖(productKey)</span></div><div class="line"><span class="attr">  changyan:</span> <span class="comment">## 畅言需在下方配置两个参数，此处不填。</span></div><div class="line"><span class="attr">    appid:</span> <span class="comment">## 畅言(appid)</span></div><div class="line"><span class="attr">    appkey:</span> <span class="comment">##畅言(appkey)</span></div></pre></td></tr></tbody></table></figure></p></li></ol><h4 id="3-2-百度统计"><a href="#3-2-百度统计" class="headerlink" title="3.2 百度统计"></a><a href="#3-2-百度统计" title="3.2 百度统计"></a>3.2 百度统计</h4><ol><li>登录<a href="http://tongji.baidu.com/" target="_blank" rel="noopener">百度统计</a>，定位到站点的代码获取页面。</li><li>复制<code>//hm.baidu.com/hm.js?</code>后面那串统计脚本id(假设为：8006843039519956000)</li><li>配置<code>主题_config.yml</code>:<figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml </a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">baidu_analytics:</span> <span class="number">8006843039519956000</span></div></pre></td></tr></tbody></table></figure><blockquote><p>注意： <code>baidu_analytics</code>不是你的百度<code>id</code>或者百度统计<code>id</code><br>如若使用谷歌统计，配置方法与百度统计类似。</p></blockquote></li></ol><h4 id="3-3-卜算子阅读次数统计"><a href="#3-3-卜算子阅读次数统计" class="headerlink" title="3.3 卜算子阅读次数统计"></a><a href="#3-3-卜算子阅读次数统计" title="3.3 卜算子阅读次数统计"></a>3.3 卜算子阅读次数统计</h4><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">busuanzi:</span> <span class="literal">true</span></div></pre></td></tr></tbody></table></figure><p>若设置为<code>true</code>将计算文章的阅读量(Hits)，并显示在文章标题下的<code>小手图标</code>旁。</p><h4 id="3-4-微博秀"><a href="#3-4-微博秀" class="headerlink" title="3.4 微博秀"></a><a href="#3-4-微博秀" title="3.4 微博秀"></a>3.4 微博秀</h4><p>微博秀挂件的代码放在<code>layout/_widget/weibo.jade</code>下，需要您去<a href="http://open.weibo.com/" target="_blank" rel="noopener">微博开放平台</a>获取您自己的微博秀代码来替换。</p><ol><li>登录<a href="http://open.weibo.com/" target="_blank" rel="noopener">微博开放平台</a>，选择微博秀。</li><li><p>为了与主题风格统一，作如下配置</p><pre><code>*   基础设置：高`400px`；勾选宽度自适应；颜色选择`白色`；</code></pre><ul><li>样式设置：主字色<code>#333</code>；链接色<code>#40759b</code>；鼠标悬停色<code>#f7f8f8</code>；</li><li>模块设置：去掉<code>标题</code>、<code>边框</code>、<code>粉丝</code>的勾选框，只留<code>微博</code>。</li></ul></li><li><p>复制代码里<code>src=&quot;&quot;</code>里引号包裹的内容，替换到<code>layout/_widget/weibo.jade</code><figure class="highlight stylus"><figcaption><span>weibo.jade</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/layout/_widget/weibo.jade" target="_blank" rel="noopener">layout/_widget/weibo.jade</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line marked"><span class="selector-class">.widget</span></div><div class="line">  <span class="selector-class">.widget-title</span></div><div class="line">    i(class=<span class="string">‘fa fa-weibo’</span>)= <span class="string">‘ ‘</span> + __(<span class="string">‘新浪微博’</span>)</div><div class="line">  iframe(<span class="attribute">width</span>=<span class="string">“100%”</span>,height=<span class="string">“400”</span>,class=<span class="string">“share_self”</span>,frameborder=<span class="string">“0”</span>,scrolling=<span class="string">“no”</span>,src=<span class="string">“<a href="http://widget.weibo.com/weiboshow/index.php?language=&amp;width=0&amp;height=400&amp;fansRow=2&amp;ptype=1&amp;speed=0&amp;skin=5&amp;isTitle=0&amp;noborder=0&amp;isWeibo=1&amp;isFans=0&amp;uid=1700139362&amp;verifier=85be6061&amp;colors=d6f3f7,ffffff,333,40759b,f7f8f8&amp;dpc=1&quot;" target="_blank" rel="noopener">http://widget.weibo.com/weiboshow/index.php?language=&amp;width=0&amp;height=400&amp;fansRow=2&amp;ptype=1&amp;speed=0&amp;skin=5&amp;isTitle=0&amp;noborder=0&amp;isWeibo=1&amp;isFans=0&amp;uid=1700139362&amp;verifier=85be6061&amp;colors=d6f3f7,ffffff,333,40759b,f7f8f8&amp;dpc=1&quot;</a></span>)</div></pre></td></tr></tbody></table></figure><br>这只是为了和主题的风格统一，当然您也可以自由随意发挥。&gt; 注意：最主要是是要把<code>src</code>里<code>uid=</code>和<code>verifier=</code>后面的字段替换为您自己代码里的就好。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; title=&quot;开始之前&quot;&gt;&lt;/a&gt;&lt;a href=&quot;#开始之前&quot; title=&quot;开始之前&quot;&gt;&lt;/a&gt;开始之前&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ngrok的基本使用</title>
    <link href="http://yoursite.com/2018/05/03/ngrok%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/05/03/ngrok的基本使用/</id>
    <published>2018-05-03T06:15:33.000Z</published>
    <updated>2018-06-15T07:05:41.933Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-把项目放到tomcat启动（即点击startup-bat）tomcat"><a href="#1-把项目放到tomcat启动（即点击startup-bat）tomcat" class="headerlink" title="1.把项目放到tomcat启动（即点击startup.bat）tomcat"></a>1.把项目放到tomcat启动（即点击startup.bat）tomcat</h3><p>将项目放到tomcat下</p><p><img src="/images/ngrok/1.png" alt="ngrok图片"></p><p>启动tomcat</p><p><img src="/images/ngrok/2.png" alt="ngrok图片"></p><h3 id="2-打开https-www-ngrok-cc"><a href="#2-打开https-www-ngrok-cc" class="headerlink" title="2.打开https://www.ngrok.cc/"></a>2.打开<a href="https://www.ngrok.cc/" target="_blank" rel="noopener">https://www.ngrok.cc/</a></h3><p>打开<a href="https://www.ngrok.cc/，登录系统，设置相关信息。" target="_blank" rel="noopener">https://www.ngrok.cc/，登录系统，设置相关信息。</a></p><p><img src="/images/ngrok/3.png" alt="ngrok图片"></p><h3 id="3-通过cmd进入客户端根目录（即sunny-exe所在目录），启动sunny-exe"><a href="#3-通过cmd进入客户端根目录（即sunny-exe所在目录），启动sunny-exe" class="headerlink" title="3.通过cmd进入客户端根目录（即sunny.exe所在目录），启动sunny.exe"></a>3.通过cmd进入客户端根目录（即sunny.exe所在目录），启动sunny.exe</h3><p>找到Sunny.exe所在的根目录</p><p><img src="/images/ngrok/4.png" alt="ngrok图片"></p><p>通过cmd进行启动，sunny.exe clientid id（<a href="https://www.ngrok.cc/" target="_blank" rel="noopener">https://www.ngrok.cc/</a> 网站上面的id）</p><p><img src="/images/ngrok/5.png" alt="ngrok图片"></p><h3 id="4-外网访问（即：第三步，窗口看到的ip就是外网ip）"><a href="#4-外网访问（即：第三步，窗口看到的ip就是外网ip）" class="headerlink" title="4.外网访问（即：第三步，窗口看到的ip就是外网ip）"></a>4.外网访问（即：第三步，窗口看到的ip就是外网ip）</h3><p>红色线部分是指IP，<a href="http://xiuxiu.free.ngrok.cc/dist/index.html" target="_blank" rel="noopener">http://xiuxiu.free.ngrok.cc/dist/index.html</a> ，dist是指项目名称，index.html页面。</p><p><img src="/images/ngrok/6.png" alt="ngrok图片"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-把项目放到tomcat启动（即点击startup-bat）tomcat&quot;&gt;&lt;a href=&quot;#1-把项目放到tomcat启动（即点击startup-bat）tomcat&quot; class=&quot;headerlink&quot; title=&quot;1.把项目放到tomcat启动（即点
      
    
    </summary>
    
      <category term="ngrok" scheme="http://yoursite.com/categories/ngrok/"/>
    
    
      <category term="ngrok的使用" scheme="http://yoursite.com/tags/ngrok%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js的基本使用</title>
    <link href="http://yoursite.com/2018/04/20/Vue-js%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/20/Vue-js的基本使用/</id>
    <published>2018-04-20T09:11:46.000Z</published>
    <updated>2018-05-16T09:25:16.556Z</updated>
    
    <content type="html"><![CDATA[<h4 id="路由的使用"><a href="#路由的使用" class="headerlink" title="路由的使用"></a>路由的使用</h4><ol><li>安装路由模块</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Npm install vue-router --save</span><br></pre></td></tr></table></figure><ol start="2"><li>引入模块</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import VueRouter from ‘vue-router’</span><br></pre></td></tr></table></figure><ol start="3"><li>作为vue的插件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure><ol start="4"><li>创建路由实例对象</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">New VueRouter(&#123;</span><br><span class="line">...配置参数</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="5"><li>注入vue选项参数</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">New Vue(&#123;</span><br><span class="line">router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="6"><li>告诉路由渲染的位置</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br></pre></td></tr></table></figure><h4 id="Hash-和-History-模式"><a href="#Hash-和-History-模式" class="headerlink" title="Hash 和 History 模式"></a>Hash 和 History 模式</h4><p>vue-router默认 hash 模式 “#” url的hash模式，mode:history模式就是正常的路径模式,history带来的便利是可以使用浏览器的前进后退功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      name: &apos;Project&apos;,</span><br><span class="line">      component: Project</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="router-link的各项配置"><a href="#router-link的各项配置" class="headerlink" title="router-link的各项配置"></a>router-link的各项配置</h4><p>router-link 组件支持用户在具有路由功能的应用中（点击）导航。 通过 to 属性指定目标地址，默认渲染成带有正确链接的 a 标签，可以通过配置 tag 属性生成别的标签.。另外，当目标路由成功激活时，链接元素自动设置一个表示激活的 CSS 类名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&quot;&#123;path:&apos;/project&apos;&#125;&quot; active-class=&quot;activeClass&quot; tag=&apos;li&apos; event=&apos;mouseover&apos;&gt;</span><br><span class="line">  &lt;i class=&quot;fa fa-home&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;span&gt;project&lt;/span&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><p>to：目标路由的链接，此链接可以进行动态绑定的，tag：渲染成某种标签，如:li,event:默认为点击事件，也可以将其设置为鼠标移入的事件，mouseover</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&apos;index&apos; tag=&apos;li&apos; event=&apos;mouseover&apos;&gt;</span><br><span class="line">  &lt;i class=&quot;fa fa-home&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;span&gt;Home&lt;/span&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;App&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      index: &apos;/home&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>active-class：设置 链接激活时使用的 CSS 类名。默认值可以通过路由的构造选项 linkActiveClass 来全局配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">//路由中设置</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      // 路由中的别名</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      name: &apos;Project&apos;,</span><br><span class="line">      component: Project</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">//组件中进行设置</span><br><span class="line"></span><br><span class="line">&lt;router-link :to=&quot;&#123;path:&apos;/project&apos;&#125;&quot; active-class=&quot;activeClass&quot; tag=&apos;li&apos; event=&apos;mouseover&apos;&gt;</span><br><span class="line">    &lt;i class=&quot;fa fa-home&quot;&gt;&lt;/i&gt;</span><br><span class="line">    &lt;span&gt;project&lt;/span&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h4 id="重定向和别名"><a href="#重定向和别名" class="headerlink" title="重定向和别名"></a>重定向和别名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      // 路由中的别名</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      name: &apos;Project&apos;,</span><br><span class="line">      component: Project</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;,</span><br><span class="line">    // 如果没有以上的地址，就将跳转到home页面</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;*&apos;,</span><br><span class="line">      // component: Home</span><br><span class="line">      // redirect: &apos;/home&apos;</span><br><span class="line">      // redirect:&#123;path: &apos;/home&apos;&#125;</span><br><span class="line">      // redirect:&#123;name: &apos;Home&apos;&#125;</span><br><span class="line">      // 动态设置重定向的目标路径</span><br><span class="line">      redirect: (to) =&gt; &#123;</span><br><span class="line">        // 目标路由对象，就是访问的路径的路由信息</span><br><span class="line">        if (to.path === &apos;/123&apos;) &#123;</span><br><span class="line">          return &apos;/home&apos;</span><br><span class="line">        &#125; else if (to.path === &apos;/456&apos;) &#123;</span><br><span class="line">          return &#123;path: &apos;/doc&apos;&#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          return &#123;name: &apos;Project&apos;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // return &apos;/home&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="嵌套路由使用"><a href="#嵌套路由使用" class="headerlink" title="嵌套路由使用"></a>嵌套路由使用</h4><p>exact：”是否激活” 默认类名的依据是 inclusive match （全包含匹配）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&apos;/&apos; exact tag=&apos;li&apos; event=&apos;mouseover&apos;&gt;</span><br><span class="line">    &lt;i class=&quot;fa fa-home&quot;&gt;&lt;/i&gt;</span><br><span class="line">    &lt;span&gt;Home&lt;/span&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><p>子路由的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/&apos;,</span><br><span class="line">      component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      component: Project,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;&apos;,</span><br><span class="line">          name: &apos;Project&apos;,</span><br><span class="line">          // 默认子路由，有默认子路由就不要再父路由中设置name属性</span><br><span class="line">          component: study</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;work&apos;,</span><br><span class="line">          name: &apos;work&apos;,</span><br><span class="line">          component: work</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;hobby&apos;,</span><br><span class="line">          name: &apos;hobby&apos;,</span><br><span class="line">          component: hobby</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="命名视图"><a href="#命名视图" class="headerlink" title="命名视图"></a>命名视图</h4><p>子路径的格式为：<a href="http://localhost:8081/work，即在子路径中加了/，就相对于跟路径来说的，子路径不需要嵌套，但是组件需要嵌套的。。" target="_blank" rel="noopener">http://localhost:8081/work，即在子路径中加了/，就相对于跟路径来说的，子路径不需要嵌套，但是组件需要嵌套的。。</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">//vue页面的写法，动态的绑定路径</span><br><span class="line"></span><br><span class="line">&lt;ul class=&quot;nav&quot;&gt;</span><br><span class="line">    &lt;router-link :to=&quot;&#123;name: &apos;Project&apos;&#125;&quot; exact tag=&apos;li&apos;&gt;</span><br><span class="line">    &lt;a&gt;study&lt;/a&gt;</span><br><span class="line">    &lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">    &lt;router-link :to=&quot;&#123;name: &apos;work&apos;&#125;&quot; tag=&apos;li&apos;&gt;</span><br><span class="line">    &lt;a&gt;work&lt;/a&gt;</span><br><span class="line">    &lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">    &lt;router-link :to=&quot;&#123;name: &apos;hobby&apos;&#125;&quot; tag=&apos;li&apos;&gt;</span><br><span class="line">    &lt;a&gt;hobby&lt;/a&gt;</span><br><span class="line">    &lt;/router-link&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">//路由的配置</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/&apos;,</span><br><span class="line">      component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      component: Project,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;&apos;,</span><br><span class="line">          name: &apos;Project&apos;,</span><br><span class="line">          component: study</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/work&apos;,</span><br><span class="line">          name: &apos;work&apos;,</span><br><span class="line">          component: work</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/hobby&apos;,</span><br><span class="line">          name: &apos;hobby&apos;,</span><br><span class="line">          component: hobby</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>多个router-view的应用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">//app.vue</span><br><span class="line"></span><br><span class="line">&lt;router-view name=&quot;slider&quot;&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;router-view class=&quot;center&quot;&gt;&lt;/router-view&gt;</span><br><span class="line"></span><br><span class="line">//路由中的配置，一个路径对应一个组件用component，一个路径对应多个组件，用Components，默认的组件用default，其他的组件用router-view中name的值</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/&apos;,</span><br><span class="line">      component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      component: Project,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;&apos;,</span><br><span class="line">          name: &apos;Project&apos;,</span><br><span class="line">          component: study</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/work&apos;,</span><br><span class="line">          name: &apos;work&apos;,</span><br><span class="line">          component: work</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/hobby&apos;,</span><br><span class="line">          name: &apos;hobby&apos;,</span><br><span class="line">          component: hobby</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        default: Document,</span><br><span class="line">        slider: slider</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="动态路径"><a href="#动态路径" class="headerlink" title="动态路径"></a>动态路径</h4><p>匹配到的所有路由，全都映射到同一个组件<br>路径:/user/:userId,userId为动态路径参数</p><p>获取参数：路由信息对象的params</p><h4 id="监控-route-路由信息对象"><a href="#监控-route-路由信息对象" class="headerlink" title="监控 $route 路由信息对象"></a>监控 $route 路由信息对象</h4><p>$router router 实例对象<br>$route 当前激活的路由信息对象，每个组件实例都会有<br>路由信息对象（一个路由信息对象表示当前激活的路由的状态信息，每次成功的导航后都会产生一个新的对象）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">let data = [</span><br><span class="line">  &#123;</span><br><span class="line">    id: 1,</span><br><span class="line">    tip: &apos;vip&apos;,</span><br><span class="line">    userName: &apos;leo1&apos;,</span><br><span class="line">    sex: &apos;男&apos;,</span><br><span class="line">    hobby: &apos;写代码&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    id: 2,</span><br><span class="line">    tip: &apos;vip&apos;,</span><br><span class="line">    userName: &apos;leo2&apos;,</span><br><span class="line">    sex: &apos;男&apos;,</span><br><span class="line">    hobby: &apos;唱歌&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    id: 3,</span><br><span class="line">    tip: &apos;common&apos;,</span><br><span class="line">    userName: &apos;leo3&apos;,</span><br><span class="line">    sex: &apos;男&apos;,</span><br><span class="line">    hobby: &apos;读书&apos;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line">export default&#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      userList: data,</span><br><span class="line">      userInfo: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 如何知道路由对象发生了变化,通过watch的方法监控route的变化</span><br><span class="line">  watch: &#123;</span><br><span class="line">    $route () &#123;</span><br><span class="line">      // 路径发生变化，$route会重新赋值，监控这个属性，会执行这个函数</span><br><span class="line">      this.getData()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 生命周期，编译之前,刚生成的时候执行created，后来不会重新生成，就不会执行钩子函数</span><br><span class="line">  created () &#123;</span><br><span class="line">    // 渲染这个组件会调用一次这个生命周期函数</span><br><span class="line">    // 复用这个组件，这个函数不会再次被调用的</span><br><span class="line">    // 地址一旦发生变化，$route 会重新生成一个路由信息对象</span><br><span class="line">    this.getData()</span><br><span class="line">  &#125;,</span><br><span class="line">  // 将公共的方法放入到methods函数中</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getData () &#123;</span><br><span class="line">      let id = this.$route.params.userId</span><br><span class="line">      if (id) &#123;</span><br><span class="line">        this.userInfo = this.userList.filter((item) =&gt; &#123;</span><br><span class="line">          return parseInt(item.id) === parseInt(id)</span><br><span class="line">        &#125;)[0]</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.userInfo = &#123;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>beforeRouterEnter() 进入组件的勾子函数</p><h4 id="Query-字符串传参"><a href="#Query-字符串传参" class="headerlink" title="Query 字符串传参"></a>Query 字符串传参</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;info-list&quot; style=&quot;font-size:20px;&quot; v-if=&quot;userInfo.userName&quot;&gt;</span><br><span class="line">  &lt;router-link exact :to=&quot;&#123;path:&apos;&apos;,query:&#123;info:&apos;follow&apos;&#125;&#125;&quot;&gt;我的关注&lt;/router-link&gt;</span><br><span class="line">  &lt;router-link exact :to=&quot;&#123;path:&apos;&apos;,query:&#123;info:&apos;share&apos;&#125;&#125;&quot;&gt;我的分享&lt;/router-link&gt;</span><br><span class="line">  &lt;div &gt;</span><br><span class="line">  &#123;&#123;$route.query&#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="过渡动效"><a href="#过渡动效" class="headerlink" title="过渡动效"></a>过渡动效</h4><p>提供了transition的封装组件，添加过渡动画，添加删除css类名<br>v-enter:定义进入过渡的开始状态<br>v-enter-active:定义进入活动状态<br>v-enter-to:定义进入的结束状态<br>v-leave:定义李凯过渡的开始状态<br>v-leave-active:定义离开活动状态<br>v-leave-to:定义离开的结束状态</p><p>过渡模式：</p><p>in-out：新元素先进行过去，完成之后当前元素过渡离开<br>out-in:当前元素进行过渡，完成之后新元素过渡进入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;transition mode=&quot;out-in&quot;&gt;</span><br><span class="line">  &lt;router-view class=&quot;center&quot;&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/transition&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.v-enter&#123;</span><br><span class="line">opacity:0;</span><br><span class="line">&#125;</span><br><span class="line">.v-enter-to&#123;</span><br><span class="line">opacity:1;</span><br><span class="line">&#125;</span><br><span class="line">.v-enter-active&#123;</span><br><span class="line">transition:1s;</span><br><span class="line">&#125;</span><br><span class="line">.v-leave&#123;</span><br><span class="line">opacity:1;</span><br><span class="line">&#125;</span><br><span class="line">.v-leave-to&#123;</span><br><span class="line">opacity:0;</span><br><span class="line">&#125;</span><br><span class="line">.v-leave-active&#123;</span><br><span class="line">transition:2s;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="动态设置name属性左右切换"><a href="#动态设置name属性左右切换" class="headerlink" title="动态设置name属性左右切换"></a>动态设置name属性左右切换</h4><p>自定义设置transition的效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;transition  name=&quot;left&quot;&gt;</span><br><span class="line">     &lt;router-view class=&quot;center&quot;&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/transition&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.left-enter&#123;</span><br><span class="line">transform:translateX(100%)</span><br><span class="line">&#125;</span><br><span class="line">.left-enter-to&#123;</span><br><span class="line">transform:translateX(0)</span><br><span class="line">&#125;</span><br><span class="line">.left-enter-active&#123;</span><br><span class="line">transition:1s;</span><br><span class="line">&#125;</span><br><span class="line">.left-leave&#123;</span><br><span class="line">transform:translateX(0)</span><br><span class="line">&#125;</span><br><span class="line">.left-leave-to&#123;</span><br><span class="line">transform:translateX(-100%)</span><br><span class="line">&#125;</span><br><span class="line">.left-leave-active&#123;</span><br><span class="line">transition:1s;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>动态设置name属性左右切换<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">// vue页面的设置</span><br><span class="line"></span><br><span class="line">&lt;transition :name=&quot;names&quot;&gt;</span><br><span class="line">      &lt;router-view class=&quot;center&quot;&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">// js中的设置</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;App&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      index: &apos;/home&apos;,</span><br><span class="line">      names: &apos;names&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    $route (to, from) &#123;</span><br><span class="line">      if (to.meta.index &lt; from.meta.index) &#123;</span><br><span class="line">        console.info(to.meta.index + &apos;===&apos;)</span><br><span class="line">        this.names = &apos;right&apos;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        console.info(to.meta.index + &apos;===&apos;)</span><br><span class="line">        this.names = &apos;left&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> // router文件夹下面的 index.js 的设置</span><br><span class="line"></span><br><span class="line">routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      meta: &#123;</span><br><span class="line">        index: 0</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      alias: &apos;/index&apos;,</span><br><span class="line">      meta: &#123;</span><br><span class="line">        index: 0</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      component: Project,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;&apos;,</span><br><span class="line">          name: &apos;Project&apos;,</span><br><span class="line">          component: study,</span><br><span class="line">          meta: &#123;</span><br><span class="line">            index: 1</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/work&apos;,</span><br><span class="line">          name: &apos;work&apos;,</span><br><span class="line">          component: work</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/hobby&apos;,</span><br><span class="line">          name: &apos;hobby&apos;,</span><br><span class="line">          component: hobby</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        default: Document,</span><br><span class="line">        slider: slider</span><br><span class="line">      &#125;,</span><br><span class="line">      meta: &#123;</span><br><span class="line">        index: 2</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/user/:tip?/:userId?&apos;,</span><br><span class="line">      name: &apos;user&apos;,</span><br><span class="line">      component: user,</span><br><span class="line">      meta: &#123;</span><br><span class="line">        index: 3</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></p><h4 id="编程式导航"><a href="#编程式导航" class="headerlink" title="编程式导航"></a>编程式导航</h4><p>借助于router的实例方法，通过编写代码来实现导航的切换<br>back 回退一步<br>forward 前进一步<br>go 指定前进后退步数<br>push 导航到不同url，向history栈添加一个新的记录<br>replace 导航到不同url，替换history栈中当前记录</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// vue 页面的写法</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;后退&quot; @click=&quot;backHandle&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;前进&quot; @click=&quot;forwardHandle&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;控制前进后退的步数&quot; @click=&quot;goHandle&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;控制导航的指定push&quot; @click=&quot;pushHandle&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;控制导航的指定replace&quot; @click=&quot;replaceHandle&quot; /&gt;</span><br><span class="line"></span><br><span class="line">// js 页面的写法</span><br><span class="line"></span><br><span class="line"> methods: &#123;</span><br><span class="line">    backHandle () &#123;</span><br><span class="line">      console.info(&apos;后退&apos;)</span><br><span class="line">      this.$router.back()</span><br><span class="line">    &#125;,</span><br><span class="line">    forwardHandle () &#123;</span><br><span class="line">      console.info(&apos;前进&apos;)</span><br><span class="line">      this.$router.forward()</span><br><span class="line">    &#125;,</span><br><span class="line">    goHandle () &#123;</span><br><span class="line">      // 前进 为正数，后退为负数</span><br><span class="line">      this.$router.go(2)</span><br><span class="line">    &#125;,</span><br><span class="line">    pushHandle () &#123;</span><br><span class="line">      // 前进 为正数，后退为负数</span><br><span class="line">      this.$router.push(&#123;path: &apos;/doc&apos;&#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    replaceHandle () &#123;</span><br><span class="line">      // 前进 为正数，后退为负数</span><br><span class="line">      this.$router.replace(&#123;path: &apos;/doc&apos;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="导航钩子函数"><a href="#导航钩子函数" class="headerlink" title="导航钩子函数"></a>导航钩子函数</h4><p> 导航发生变化时，导航钩子主要用来拦截导航，让它完成跳转或取消<br> 执行钩子函数位置<br> router全局<br> 单个路由<br> 组件中<br> 钩子函数<br> router实例上：beforsEach，afterEach<br> 单个路由中：beforeEnter<br> 组件内的钩子：beforeRouterEnter，beforeRouterUpdate，beforeRouterLeave<br> 钩子函数接收的参数<br> to：要进入的目标路由对象，到哪里去<br> from：正要离开导航的路由对象，从哪儿来<br> next：用来决定跳转或取消导航<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 切换不同的导航，钩子函数都会被执行</span><br><span class="line">router.beforeEach((to, from, next) =&gt; &#123;</span><br><span class="line">console.log(&apos;beforeEach&apos;)</span><br><span class="line">// 想要进入导航必须要执行以下next(),next(false)</span><br><span class="line">if(to.meta.login) &#123;</span><br><span class="line"> next(&apos;/login&apos;)</span><br><span class="line">&#125; else &#123;</span><br><span class="line"> next()</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">// 移入不同导航时，需要修改页面的title值</span><br><span class="line">router.afterEach((to, from) =&gt; &#123;</span><br><span class="line">if(to.meta.title) &#123;</span><br><span class="line"> window.document.title = to.meta.title</span><br><span class="line">&#125; else &#123;</span><br><span class="line"> window.document.title = &apos;peixiu&apos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>单个路由设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">routes: [</span><br><span class="line"> &#123;</span><br><span class="line">   path: &apos;/&apos;,</span><br><span class="line">   component: Home,</span><br><span class="line">   beforeEnter (to, from, next) &#123;</span><br><span class="line">     if (to.meta.login) &#123;</span><br><span class="line">       next(&apos;/login&apos;)</span><br><span class="line">     &#125; else &#123;</span><br><span class="line">       next()</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;路由的使用&quot;&gt;&lt;a href=&quot;#路由的使用&quot; class=&quot;headerlink&quot; title=&quot;路由的使用&quot;&gt;&lt;/a&gt;路由的使用&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;安装路由模块&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="Vue.js的基本使用" scheme="http://yoursite.com/categories/Vue-js%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="vue.js" scheme="http://yoursite.com/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>less项目实战</title>
    <link href="http://yoursite.com/2018/04/20/less%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2018/04/20/less实战/</id>
    <published>2018-04-20T02:04:16.000Z</published>
    <updated>2018-06-07T05:45:22.130Z</updated>
    
    <content type="html"><![CDATA[<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@nice-blue: #5B83AD;</span><br><span class="line">@light-blue: @nice-blue + #111;</span><br><span class="line">#header &#123;</span><br><span class="line">  color: @light-blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="混合（Mixins）"><a href="#混合（Mixins）" class="headerlink" title="混合（Mixins）"></a>混合（Mixins）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.bordered &#123;</span><br><span class="line">  border-top: dotted 1px black;</span><br><span class="line">  border-bottom: solid 2px black;</span><br><span class="line">&#125;</span><br><span class="line">#menu a &#123;</span><br><span class="line">  color: #111;</span><br><span class="line">  .bordered;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.post a &#123;</span><br><span class="line">  color: red;</span><br><span class="line">  .bordered;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="嵌套（Nesting）"><a href="#嵌套（Nesting）" class="headerlink" title="嵌套（Nesting）"></a>嵌套（Nesting）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.clearfix &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  zoom: 1;</span><br><span class="line"></span><br><span class="line">  &amp;:after &#123;</span><br><span class="line">    content: &quot; &quot;;</span><br><span class="line">    display: block;</span><br><span class="line">    font-size: 0;</span><br><span class="line">    height: 0;</span><br><span class="line">    clear: both;</span><br><span class="line">    visibility: hidden;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运算（Operations）"><a href="#运算（Operations）" class="headerlink" title="运算（Operations）"></a>运算（Operations）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/ numbers are converted into the same units</span><br><span class="line">@conversion-1: 5cm + 10mm; // result is 6cm</span><br><span class="line">@conversion-2: 2 - 3cm - 5mm; // result is -1.5cm</span><br><span class="line"></span><br><span class="line">// conversion is impossible</span><br><span class="line">@incompatible-units: 2 + 5px - 3cm; // result is 4px</span><br><span class="line"></span><br><span class="line">// example with variables</span><br><span class="line">@base: 5%;</span><br><span class="line">@filler: @base * 2; // result is 10%</span><br><span class="line">@other: @base + @filler; // result is 15%</span><br></pre></td></tr></table></figure><h3 id="作用域（Scope）"><a href="#作用域（Scope）" class="headerlink" title="作用域（Scope）"></a>作用域（Scope）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@var: red;</span><br><span class="line">#page &#123;</span><br><span class="line">  @var: white;</span><br><span class="line">  #header &#123;</span><br><span class="line">    color: @var; // white</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注释（Comments）"><a href="#注释（Comments）" class="headerlink" title="注释（Comments）"></a>注释（Comments）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/* 一个块注释</span><br><span class="line"> * style comment! */</span><br><span class="line">@var: red;</span><br><span class="line"></span><br><span class="line">// 这一行被注释掉了！</span><br><span class="line">@var: white;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="less" scheme="http://yoursite.com/categories/less/"/>
    
    
      <category term="less项目实战" scheme="http://yoursite.com/tags/less%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>vuejs项目的下载</title>
    <link href="http://yoursite.com/2018/04/20/vuejs%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%8B%E8%BD%BD/"/>
    <id>http://yoursite.com/2018/04/20/vuejs项目的下载/</id>
    <published>2018-04-20T02:04:16.000Z</published>
    <updated>2018-04-20T08:02:54.388Z</updated>
    
    <content type="html"><![CDATA[<p>下载项目：</p><ol><li><p>进入到需要下载vue的文件夹中</p></li><li><p>vue init webpack    MyPrj(打包)</p></li><li><p>进入目录，安装依赖，cd MyPrj,npm install</p></li><li><p>运行项目npm run dev</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;下载项目：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入到需要下载vue的文件夹中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vue init webpack    MyPrj(打包)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进入目录，安装依赖，cd MyPrj,npm install&lt;/p&gt;

      
    
    </summary>
    
      <category term="vue.js" scheme="http://yoursite.com/categories/vue-js/"/>
    
    
      <category term="vuejs项目的下载" scheme="http://yoursite.com/tags/vuejs%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>vuex中store的用法</title>
    <link href="http://yoursite.com/2018/04/20/vuex%E4%B8%ADstore%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/20/vuex中store的用法/</id>
    <published>2018-04-20T02:04:16.000Z</published>
    <updated>2018-05-24T06:17:57.489Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍了Vuex之理解Store的用法，Store类就是存储数据和管理数据方法的仓库，实现方式是将数据和方法已对象形式传入其实例中</p><h3 id="1-什么是Store？"><a href="#1-什么是Store？" class="headerlink" title="1.什么是Store？"></a><a href="#1.什么是Store？" title="1.什么是Store？"></a>1.什么是Store？</h3><p>Vuex就是提供一个仓库，Store仓库里面放了很多对象。其中state就是数据源存放地，对应于与一般Vue对象里面的data（后面讲到的actions和mutations对应于methods）。<br>在使用Vuex的时候通常会创建Store实例new Vuex.store({state,getters,mutations,actions})有很多子模块的时候还会使用到modules<br><img src="/images/vuex/1.png" alt="Alt text"><br>Store类就是存储数据和管理数据方法的仓库，实现方式是将数据和方法已对象形式传入其实例中。要注意一个应用或是项目中只能存在一个Store实例！！</p><h3 id="3-store-js的核心"><a href="#3-store-js的核心" class="headerlink" title="3.store.js的核心"></a><a href="#3.store.js的核心" title="3.store.js的核心"></a>3.store.js的核心</h3><p>状态管理有5个核心，分别是state、getter、mutation、action以及module。分别简单的介绍一下它们：</p><h4 id="1-state"><a href="#1-state" class="headerlink" title="1) state"></a>1) state</h4><p>state为单一状态树，在state中需要定义我们所需要管理的数组、对象、字符串等等，只有在这里定义了，在vue.js的组件中才能获取你定义的这个对象的状态。</p><h4 id="2-getter"><a href="#2-getter" class="headerlink" title="2) getter"></a>2) getter</h4><p>getter有点类似vue.js的计算属性，当我们需要从store的state中派生出一些状态，那么我们就需要使用getter，getter会接收state作为第一个参数，而且getter的返回值会根据它的依赖被缓存起来，只有getter中的依赖值（state中的某个需要派生状态的值）发生改变的时候才会被重新计算。</p><h4 id="3-mutation"><a href="#3-mutation" class="headerlink" title="3) mutation"></a>3) mutation</h4><p>更改store中state状态的唯一方法就是提交mutation，就很类似事件。每个mutation都有一个字符串类型的事件类型和一个回调函数，我们需要改变state的值就要在回调函数中改变。我们要执行这个回调函数，那么我们需要执行一个相应的调用方法：store.commit。</p><h4 id="4-action"><a href="#4-action" class="headerlink" title="4) action"></a>4) action</h4><p> action可以提交mutation，在action中可以执行store.commit，而且action中可以有任何的异步操作。在页面中如果我们要使用这个action，则需要执行store.dispatch</p><h4 id="5-module"><a href="#5-module" class="headerlink" title="5) module"></a>5) module</h4><p>module其实只是解决了当state中很复杂臃肿的时候，module可以将store分割成模块，每个模块中拥有自己的state、mutation、action和getter。</p><h3 id="2-store-js的写法"><a href="#2-store-js的写法" class="headerlink" title="2.store.js的写法"></a><a href="#2.store.js的写法" title="2.store.js的写法"></a>2.store.js的写法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Vuex from &apos;vuex&apos;</span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line">let store = new Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    carPanelData: [],</span><br><span class="line">    maxOff: false,</span><br><span class="line">    // 是否为最大值,为最大值的时候弹出对话框</span><br><span class="line">    carShow: false,</span><br><span class="line">    // 购物车是否隐藏</span><br><span class="line">    carTimer: null,</span><br><span class="line">    // 创建一个小球，记录相关的信息</span><br><span class="line">    ball: &#123;</span><br><span class="line">      show: false,</span><br><span class="line">      // 哪一个按钮</span><br><span class="line">      el: null,</span><br><span class="line">      // 图片地址</span><br><span class="line">      img: &apos;&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;</span><br><span class="line">    totalCount: function (state) &#123;</span><br><span class="line">      let count = 0</span><br><span class="line">      state.carPanelData.forEach((goods) =&gt; &#123;</span><br><span class="line">        count += goods.count</span><br><span class="line">      &#125;)</span><br><span class="line">      return count</span><br><span class="line">    &#125;,</span><br><span class="line">    totalPrice: function (state) &#123;</span><br><span class="line">      let price = 0</span><br><span class="line">      state.carPanelData.forEach((goods) =&gt; &#123;</span><br><span class="line">        price += goods.count * goods.price</span><br><span class="line">      &#125;)</span><br><span class="line">      return price</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 建立一个方法</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    addCarPanelData: function (state, data) &#123;</span><br><span class="line">      let boff = true</span><br><span class="line">      state.carPanelData.forEach((goods) =&gt; &#123;</span><br><span class="line">        if (goods.sku_id === data.sku_id) &#123;</span><br><span class="line">          goods.count++</span><br><span class="line">          boff = false</span><br><span class="line">          if (goods.count &gt; goods.limit_num) &#123;</span><br><span class="line">            goods.count--</span><br><span class="line">            state.maxOff = true</span><br><span class="line">            return false</span><br><span class="line">          &#125;</span><br><span class="line">          /* state.ball.el = event.path[0] */</span><br><span class="line">          /* state.ball.show = true</span><br><span class="line">          state.ball.img = data[0].ali_image</span><br><span class="line">          boff = false */</span><br><span class="line">          console.log(event)</span><br><span class="line">          // 加成功后显示弹出框</span><br><span class="line">          state.carShow = true</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      if (boff) &#123;</span><br><span class="line">        let goodsData = data</span><br><span class="line">        Vue.set(goodsData, &apos;count&apos;, 1)</span><br><span class="line">        state.carPanelData.push(goodsData)</span><br><span class="line">        // 加成功后显示弹出框</span><br><span class="line">        state.carShow = true</span><br><span class="line">        // event 存在浏览器的兼容性问题</span><br><span class="line">        /* state.ball.el = event.path[0] */</span><br><span class="line">        /* state.ball.show = true</span><br><span class="line">        state.ball.img = data[0].ali_image</span><br><span class="line">        boff = false */</span><br><span class="line">        console.log(event)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    deleteCarPanelData: function (state, id) &#123;</span><br><span class="line">      state.carPanelData.forEach((goods, index) =&gt; &#123;</span><br><span class="line">        if (goods.sku_id === id) &#123;</span><br><span class="line">          state.carPanelData.splice(index, 1)</span><br><span class="line">          return false</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    closePrompt: function (state) &#123;</span><br><span class="line">      state.maxOff = false</span><br><span class="line">    &#125;,</span><br><span class="line">    alertPrompt: function (state) &#123;</span><br><span class="line">      state.maxOff = true</span><br><span class="line">    &#125;,</span><br><span class="line">    showCar: function (state) &#123;</span><br><span class="line">      clearTimeout(state.carTimer)</span><br><span class="line">      state.carShow = true</span><br><span class="line">    &#125;,</span><br><span class="line">    hideCar: function (state) &#123;</span><br><span class="line">      state.carTimer = setTimeout(() =&gt; &#123;</span><br><span class="line">        state.carShow = false</span><br><span class="line">      &#125;, 500)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">export default store</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇文章主要介绍了Vuex之理解Store的用法，Store类就是存储数据和管理数据方法的仓库，实现方式是将数据和方法已对象形式传入其实例中&lt;/p&gt;
&lt;h3 id=&quot;1-什么是Store？&quot;&gt;&lt;a href=&quot;#1-什么是Store？&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="vue.js" scheme="http://yoursite.com/categories/vue-js/"/>
    
    
      <category term="vuex中store的用法" scheme="http://yoursite.com/tags/vuex%E4%B8%ADstore%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>vue项目实战</title>
    <link href="http://yoursite.com/2018/04/20/vue%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2018/04/20/vue项目实战/</id>
    <published>2018-04-20T02:04:16.000Z</published>
    <updated>2018-06-15T07:04:33.550Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍了vue的环境配置,vue项目的目录结构以及在开发vue项目中问题的一些解决方案。</p><h3 id="环境配置及目录结构"><a href="#环境配置及目录结构" class="headerlink" title="环境配置及目录结构"></a>环境配置及目录结构</h3><p>1.安装node.js(<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">http://www.runoob.com/nodejs/nodejs-install-setup.html</a>)<br>2.基于node.js,利用淘宝npm镜像安装相关依赖<br>  在cmd里直接输入：npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org，回车，等待安装.." target="_blank" rel="noopener">https://registry.npm.taobao.org，回车，等待安装..</a>.<br>3.安装全局vue-cli脚手架,用于帮助搭建所需的模板框架<br>  在cmd里 1)输入：cnpm install -g vue-cli，回车，等待安装…<br>          2).输入：vue，回车，若出现vue信息说明表示成功<br>4.创建项目<br>在cmd里输入：vue init webpack vue_test(项目文件夹名)，回车，等待一小会儿，依次出现‘git’下的项，可按下图操作<br><img src="/images/vuejs/setting1.png" alt="Alt text"><br>5.安装依赖<br>  在cmd里  1).输入：cd vue_test（项目名），回车，进入到具体项目文件夹<br>           2).输入：cnpm install，回车，等待一小会儿<br>  回到项目文件夹，会发现项目结构里，多了一个node_modules文件夹（该文件里的内容就是之前安装的依赖）<br>  基于脚手架创建的默认项目结构如下图所示：<br>  <img src="/images/vuejs/setting2.png" alt="Alt text"><br>6.测试环境是否搭建成功<br>  方法1：在cmd里输入：cnpm run dev<br>  方法2：在浏览里输入：localhost:8080(默认端口为8080)<br>  运行起来后的效果如下图所示：<br>  <img src="/images/vuejs/setting3.png" alt="Alt text"></p><p>项目的目录结构：<br>  assets：主要放置样式文件和图片<br>  components：组件<br>  lib：放置模拟好的数据<br>  router：放置路由信息<br>  store：放置vuex的文件<br>  views：放置所有的单页面</p><h3 id="使用Vuex步骤"><a href="#使用Vuex步骤" class="headerlink" title="使用Vuex步骤"></a>使用Vuex步骤</h3><p>1.使用npm安装：<br>  npm install vuex –save<br>2.引入vuex插件<br>创建文件夹store，新建index.js，import Vue和Vuex，Vue的插件引入函数Vue.use()使用Vuex,Vue.use(Vuex)<br>store/index.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Vuex from &apos;vuex&apos;</span><br><span class="line">Vue.use(Vuex)</span><br><span class="line">let store = new Vuex.Store(&#123;&#125;)</span><br></pre></td></tr></table></figure></p><p>main.js中引入store，在Vue实例中注册store对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import App from &apos;./App&apos;</span><br><span class="line">import router from &apos;./router&apos;</span><br><span class="line"></span><br><span class="line">import store from &apos;./store&apos;</span><br><span class="line">Vue.config.productionTip = false</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  template: &apos;&lt;App/&gt;&apos;,</span><br><span class="line">  components: &#123; App &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>3.将状态映射到组件<br>store/index.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Vuex from &apos;vuex&apos;</span><br><span class="line">Vue.use(Vuex)</span><br><span class="line">let store = new Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    receiveInfo: [&#123;</span><br><span class="line">      &apos;name&apos;: &apos;王某某&apos;,</span><br><span class="line">      &apos;phone&apos;: &apos;13811111111&apos;,</span><br><span class="line">      &apos;areaCode&apos;: &apos;010&apos;,</span><br><span class="line">      &apos;landLine&apos;: &apos;64627856&apos;,</span><br><span class="line">      &apos;provinceId&apos;: 110000,</span><br><span class="line">      &apos;province&apos;: &apos;北京市&apos;,</span><br><span class="line">      &apos;cityId&apos;: 110100,</span><br><span class="line">      &apos;city&apos;: &apos;市辖区&apos;,</span><br><span class="line">      &apos;countyId&apos;: 110106,</span><br><span class="line">      &apos;county&apos;: &apos;海淀区&apos;,</span><br><span class="line">      &apos;add&apos;: &apos;上地十街辉煌国际西6号楼319室&apos;,</span><br><span class="line">      &apos;default&apos;: true,</span><br><span class="line">      &apos;checked&apos;: true</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      &apos;name&apos;: &apos;李某某&apos;,</span><br><span class="line">      &apos;phone&apos;: &apos;13811111111&apos;,</span><br><span class="line">      &apos;areaCode&apos;: &apos;010&apos;,</span><br><span class="line">      &apos;landLine&apos;: &apos;64627856&apos;,</span><br><span class="line">      &apos;provinceId&apos;: 110000,</span><br><span class="line">      &apos;province&apos;: &apos;北京市&apos;,</span><br><span class="line">      &apos;cityId&apos;: 110100,</span><br><span class="line">      &apos;city&apos;: &apos;市辖区&apos;,</span><br><span class="line">      &apos;countyId&apos;: 110106,</span><br><span class="line">      &apos;county&apos;: &apos;海淀区&apos;,</span><br><span class="line">      &apos;add&apos;: &apos;上地十街辉煌国际东6号楼350室&apos;,</span><br><span class="line">      &apos;default&apos;: false,</span><br><span class="line">      &apos;checked&apos;: false</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>组件中修改状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">    receiveInfo: function () &#123;</span><br><span class="line">      return this.$store.state.receiveInfo</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>getters:过滤state数据<br>mutations:显式的更改state里的数据</p><h3 id="vue中关于props和-emit的用法"><a href="#vue中关于props和-emit的用法" class="headerlink" title="vue中关于props和$emit的用法"></a>vue中关于props和$emit的用法</h3><p>1.父组件可以使用props把数据传给子组件<br>props是父组件用来传递数据的一个自定义属性。父组件的数据需要通过props把数据传递给子组件，子组件需要显示地用props选项声明props<br>父组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;address-pop v-if=&quot;popShow&quot; @close=&quot;closePop&quot; :oldReceive=&quot;oldReceive&quot;&gt;&lt;/address-pop&gt;</span><br></pre></td></tr></table></figure></p><p>子组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">  oldReceive: &#123;</span><br><span class="line">    type: Object</span><br><span class="line">  &#125;,</span><br><span class="line">  receiveIndex: &#123;</span><br><span class="line">    type: Number</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.子组件可以使用$emit触发父组件的自定义事件<br>父组件定义了一个close事件，在子组件中直接通过this.$emit(‘close’)调用父组件中的close方法<br>父组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;address-pop v-if=&quot;popShow&quot; @close=&quot;closePop&quot; :oldReceive=&quot;oldReceive&quot;&gt;&lt;/address-pop&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import addressPop from &apos;@/components/address-pop&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">components: &#123;</span><br><span class="line">  addressPop</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">  closePop: function () &#123;</span><br><span class="line">    this.popShow = false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>子组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;dialog-close&quot; @click=&quot;closePop&quot;&gt;x&lt;/span&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">  closePop: function () &#123;</span><br><span class="line">  this.$emit(&apos;close&apos;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇文章主要介绍了vue的环境配置,vue项目的目录结构以及在开发vue项目中问题的一些解决方案。&lt;/p&gt;
&lt;h3 id=&quot;环境配置及目录结构&quot;&gt;&lt;a href=&quot;#环境配置及目录结构&quot; class=&quot;headerlink&quot; title=&quot;环境配置及目录结构&quot;&gt;&lt;/a&gt;环境
      
    
    </summary>
    
      <category term="vue.js" scheme="http://yoursite.com/categories/vue-js/"/>
    
    
      <category term="vue项目实战" scheme="http://yoursite.com/tags/vue%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>markdown的语法</title>
    <link href="http://yoursite.com/2018/04/20/markdown%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/20/markdown的语法/</id>
    <published>2018-04-20T02:04:16.000Z</published>
    <updated>2018-05-08T02:50:45.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*斜体*或_斜体_</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><h2 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">这是一个一级标题</span><br><span class="line">============================</span><br><span class="line">这是一个二级标题</span><br><span class="line">--------------------------------------------------</span><br><span class="line"></span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>语法说明：<br>[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。<a href="链接地址 “链接标题”">链接文字</a>’这样的形式。链接地址与链接标题前有一个空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到[梵居闹市](http://blog.leanote.com/freewalk)</span><br><span class="line">欢迎来到[梵居闹市](http://blog.leanote.com/freewalk &quot;梵居闹市&quot;)</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>使用 *，+，- 表示无序列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 无序列表项 一</span><br><span class="line">- 无序列表项 二</span><br><span class="line">- 无序列表项 三</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p> 语法说明：</p><p>引用需要在被引用的文本前加上&gt;符号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一个有两段文字的引用,</span><br><span class="line">&gt; 无意义的占行文字1.</span><br><span class="line">&gt; 无意义的占行文字2.</span><br><span class="line">&gt;</span><br><span class="line">&gt; 无意义的占行文字3.</span><br><span class="line">&gt; 无意义的占行文字4</span><br></pre></td></tr></table></figure><h2 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片Alt](图片地址 “图片Title”)</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>语法说明：</p><ol><li>不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。</li><li>列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。</li><li>第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|75</span><br><span class="line">小红|女|79</span><br><span class="line">小陆|男|92</span><br></pre></td></tr></table></figure><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">*****</span><br><span class="line">- - -</span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>语法说明：</p><ol><li>插入行内代码，即插入一个单词或者一句代码的情况，使用<code>code</code>这样的形式插入。</li><li>插入多行代码，可以使用缩进或者“<code>code “</code>,具体看示例。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C语言里的函数 <span class="string">`scanf()`</span> 怎么使用？</span><br></pre></td></tr></table></figure><h2 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">半方大的空白&amp;ensp;或&amp;#8194;</span><br><span class="line">全方大的空白&amp;emsp;或&amp;#8195;</span><br><span class="line">不断行的空白格&amp;nbsp;或&amp;#160;</span><br></pre></td></tr></table></figure><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><p>语法描述：<br>在你准备跳转到的指定标题后插入锚点，然后在文档的其它地方写上连接到锚点的链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## 0. 目录&#123;#index&#125;</span><br><span class="line">跳转到[目录](#index)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;斜体和粗体&quot;&gt;&lt;a href=&quot;#斜体和粗体&quot; class=&quot;headerlink&quot; title=&quot;斜体和粗体&quot;&gt;&lt;/a&gt;斜体和粗体&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="markdown" scheme="http://yoursite.com/categories/markdown/"/>
    
    
      <category term="markdown的语法" scheme="http://yoursite.com/tags/markdown%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的基本使用</title>
    <link href="http://yoursite.com/2018/04/18/Hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/18/Hexo的基本使用/</id>
    <published>2018-04-18T09:09:08.000Z</published>
    <updated>2018-05-08T02:54:06.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo相关的网站"><a href="#Hexo相关的网站" class="headerlink" title="Hexo相关的网站"></a>Hexo相关的网站</h2><p><a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands.html</a></p><h2 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;  hexo new post "新建一篇文章"  #新建一篇文章</span><br><span class="line">hexo generate  简写 hexo g  #生成静态文件</span><br><span class="line">hexo server #启动服务器</span><br><span class="line">hexo deploy 简写 hexo d #部署网站</span><br><span class="line">hexo clean #清理缓存文件和已生成静态的文件</span><br><span class="line">hexo version #显示hexo的版本</span><br></pre></td></tr></table></figure><h2 id="本地图片的使用"><a href="#本地图片的使用" class="headerlink" title="本地图片的使用"></a>本地图片的使用</h2><p>主配置_config.yml文件中将post_asset_folder:true</p><p>运行下面代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:<span class="comment">//github.com/CodeFalling/hexo-asset-image –save</span></span><br></pre></td></tr></table></figure><p>图片的路径写法：”/images/hexo/bg.jpg”</p><p><img src="/images/hexo/hexoimg.png" alt="hexo图片"></p><h2 id="Hexo-主题安装"><a href="#Hexo-主题安装" class="headerlink" title="Hexo 主题安装"></a>Hexo 主题安装</h2><h2 id="主题的筛选"><a href="#主题的筛选" class="headerlink" title="主题的筛选"></a>主题的筛选</h2><p>Hexo主题 ( <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a> )页面,可以欣赏到很多很优秀的主题</p><p><img src="/images/hexo/hexotheme.png" alt="hexo主题"></p><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>点击图片,就会跳到这个主题的博客,看到实际的效果<br>下载这个主题,就点击主题文字,进入主题Github页面,然后复制下载地址</p><p><img src="/images/hexo/downloadtheme.png" alt="下载hexo主题"></p><p>进入blog目录,克隆主题到本地</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:<span class="comment">//github.com/TongchengQiu/hexo-theme-another.git themes/another</span></span><br></pre></td></tr></table></figure><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>修改blog根目录的_config.yml,将theme修改为another</p><p><em>注意: 某些主题可能需要安装Node.js的插件,在安装主题时,最好在主题的Githu主页看看安装步骤</em></p><p><img src="/images/hexo/edittheme.png" alt="hexo主题"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo相关的网站&quot;&gt;&lt;a href=&quot;#Hexo相关的网站&quot; class=&quot;headerlink&quot; title=&quot;Hexo相关的网站&quot;&gt;&lt;/a&gt;Hexo相关的网站&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/comman
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="Hexo的基本使用" scheme="http://yoursite.com/tags/Hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>GitHub的基本使用</title>
    <link href="http://yoursite.com/2018/04/18/GitHub%E7%9A%84SSH%E6%8F%90%E4%BA%A4%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/04/18/GitHub的SSH提交配置/</id>
    <published>2018-04-18T09:09:08.000Z</published>
    <updated>2018-05-08T02:49:46.211Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git可以通过https方式和ssh方式连接服务器上的仓库。"><a href="#Git可以通过https方式和ssh方式连接服务器上的仓库。" class="headerlink" title="Git可以通过https方式和ssh方式连接服务器上的仓库。"></a>Git可以通过https方式和ssh方式连接服务器上的仓库。</h2><p>两者比较：<br>1.https： 比较方便，但是每次fetch和push代码都需要输入账号和密码，略显麻烦<br>2.ssh： 传输前压缩数据，传输效率高，不需要每次提供账号密码</p><h2 id="Git的user-name和email设置"><a href="#Git的user-name和email设置" class="headerlink" title="Git的user name和email设置"></a>Git的user name和email设置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"xxxx"</span></span><br><span class="line">$ git config --global user.email <span class="string">"xxxx@163.com"</span></span><br></pre></td></tr></table></figure><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><p>使用你注册github的邮箱生成秘钥</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"xxxx@163.com"</span></span><br></pre></td></tr></table></figure><p>中间连续3次Enter键</p><p><img src="/images/github/githubsetup.png" alt="github图片"></p><p>.ssh目录会生成id_rsa和id_rsa.pub两个文件，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人（关于RSA加密，可以自行百度，这里不详细展开）</p><h2 id="添加SSH-key到github账户"><a href="#添加SSH-key到github账户" class="headerlink" title="添加SSH key到github账户"></a>添加SSH key到github账户</h2><p>在GitHub的账户添加SSH Key，GitHub才能根据此进行加密解密，从而判断此提交是由你本人操作</p><p><img src="/images/github/githubssh.png" alt="github图片"></p><h2 id="测试SSH-key是否设置成功"><a href="#测试SSH-key是否设置成功" class="headerlink" title="测试SSH key是否设置成功"></a>测试SSH key是否设置成功</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity <span class="keyword">of</span> host <span class="string">'github.com (192.30.253.113)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br></pre></td></tr></table></figure><p>是否继续连接？输入 yes</p><p>输出如下，则表示通过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi xxxx! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell        access.</span></span><br></pre></td></tr></table></figure><h2 id="设置项目连接方式"><a href="#设置项目连接方式" class="headerlink" title="设置项目连接方式"></a>设置项目连接方式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote set-url git@github.com:oDevilo/Java-Base</span><br></pre></td></tr></table></figure><p>这里修改的是项目中 .git （隐藏）文件夹下的config文件<br>原来如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[remote <span class="string">"origin"</span>]</span><br><span class="line">    url = https:<span class="comment">//github.com/oDevilo/Java-Base</span></span><br><span class="line">    fetch = +refs/heads<span class="comment">/*:refs/remotes/origin/*</span></span><br></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[remote <span class="string">"origin"</span>]</span><br><span class="line">    url = git@github.com:oDevilo/Java-Base</span><br><span class="line">    fetch = +refs/heads<span class="comment">/*:refs/remotes/origin/*</span></span><br></pre></td></tr></table></figure><h2 id="自动部署代码的方法"><a href="#自动部署代码的方法" class="headerlink" title="自动部署代码的方法"></a>自动部署代码的方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在项目的_config.yml文件中进行设置</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:FENGXIUWEI/FENGXIUWEI.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"><span class="comment">//命令</span></span><br><span class="line">hexo clean <span class="comment">//清理缓存文件和已生成静态的文件</span></span><br><span class="line">hexo d <span class="comment">//部署网站</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git可以通过https方式和ssh方式连接服务器上的仓库。&quot;&gt;&lt;a href=&quot;#Git可以通过https方式和ssh方式连接服务器上的仓库。&quot; class=&quot;headerlink&quot; title=&quot;Git可以通过https方式和ssh方式连接服务器上的仓库。&quot;&gt;
      
    
    </summary>
    
      <category term="GitHub" scheme="http://yoursite.com/categories/GitHub/"/>
    
    
      <category term="GitHub的基本使用" scheme="http://yoursite.com/tags/GitHub%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>字体小图标的制作方法</title>
    <link href="http://yoursite.com/2017/04/09/%E5%AD%97%E4%BD%93%E5%B0%8F%E5%9B%BE%E6%A0%87%E7%9A%84%E5%88%B6%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/04/09/字体小图标的制作/</id>
    <published>2017-04-09T10:49:26.000Z</published>
    <updated>2018-05-08T05:52:27.361Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字体小图标的介绍"><a href="#字体小图标的介绍" class="headerlink" title="字体小图标的介绍"></a>字体小图标的介绍</h2><p>Font Awesome <a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">（http://fontawesome.dashgame.com/)</a>为您提供可缩放的矢量图标，可以使用CSS所提供的所有特性对它们进行更改，包括：大小、颜色、阴影或者其它任何支持的效果。Font Awesome提供的字体小图标不一定能够满足开发项目的需求，因此我们需要根据自身的具体要求进行设计新的小图标。</p><h2 id="制作-png格式图片"><a href="#制作-png格式图片" class="headerlink" title="制作.png格式图片"></a>制作.png格式图片</h2><p>1) 用PS设置符合自己需求的png小图标<br>2) 在网站上面查找符合需求的png图片 相关网站：<a href="http://www.easyicon.net/iconsearch/light/3/" target="_blank" rel="noopener">http://www.easyicon.net/iconsearch/light/3/</a></p><h2 id="将-png格式图片转化为SVG格式"><a href="#将-png格式图片转化为SVG格式" class="headerlink" title="将.png格式图片转化为SVG格式"></a>将.png格式图片转化为SVG格式</h2><p>1）进入<a href="https://image.online-convert.com/convert-to-svg" target="_blank" rel="noopener">https://image.online-convert.com/convert-to-svg</a> 页面<br>2）点击上传，上传对应的图片</p><p><img src="/images/icon/pngtosvg.png" alt="Alt text"></p><p>3.下载转化为svg格式的文件</p><h2 id="将SVG格式文件转化为字体小图标"><a href="#将SVG格式文件转化为字体小图标" class="headerlink" title="将SVG格式文件转化为字体小图标"></a>将SVG格式文件转化为字体小图标</h2><p>1）进入<a href="https://icomoon.io/app/#/select/font" target="_blank" rel="noopener">https://icomoon.io/app/#/select/font</a> 页面<br>2) 导入SVG图片,并且选中需要生成的小图标</p><p><img src="/images/icon/svgtofont.png" alt="Alt text"></p><p>3）生成自己小图标,选中下方的download标签页,设置字体小图标的前缀名，避免与bootstrap中的冲突，点击download即可以进行下载字体小图标</p><p><img src="/images/icon/fontsetting.png" alt="Alt text"></p><h2 id="将制作后的小图标应用于项目"><a href="#将制作后的小图标应用于项目" class="headerlink" title="将制作后的小图标应用于项目"></a>将制作后的小图标应用于项目</h2><p>1）新建一个文件夹如icomoon，将下面的style.css和font文件夹拷贝到icomoon文件夹下面</p><p><img src="/images/icon/fontlist.png" alt="Alt text"></p><p>2）在页面上引入style.css即可使用新建的字体小图标<br>3）字体小图标的使用格式</p><p><pre><br><code><br>&lt;i class=”iconnew-flightTop”&gt;&lt;/i&gt;<br></code><br></pre></p><div class="left"><img src="/images/icon/fontformat.png" alt="Alt text"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;字体小图标的介绍&quot;&gt;&lt;a href=&quot;#字体小图标的介绍&quot; class=&quot;headerlink&quot; title=&quot;字体小图标的介绍&quot;&gt;&lt;/a&gt;字体小图标的介绍&lt;/h2&gt;&lt;p&gt;Font Awesome &lt;a href=&quot;http://fontawesome.dashg
      
    
    </summary>
    
      <category term="bootstrap" scheme="http://yoursite.com/categories/bootstrap/"/>
    
    
      <category term="字体小图标的制作方法" scheme="http://yoursite.com/tags/%E5%AD%97%E4%BD%93%E5%B0%8F%E5%9B%BE%E6%A0%87%E7%9A%84%E5%88%B6%E4%BD%9C%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
